name: Terraform
run-name: Terraform workflow
on:
  pull_request:
    types:
      - opened
      - synchronize

env:
  AWS_REGION: "us-east-1"

permissions:
  id-token: write
  contents: read
jobs:
  configure_auth:
    runs-on: ubuntu-latest
    name: Requirements
    environment:  auto
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::621897290135:role/oidc-github-actions
          role-session-name: bootcamp-account
      - run: aws sts get-caller-identity
      - run: aws s3 ls
      - uses: actions/github-script@v6
        id: script
        timeout-minutes: 10
        with:
          debug: true
          script: |
            const token = process.env['ACTIONS_RUNTIME_TOKEN']
            const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
            core.setOutput('TOKEN', token.trim())
            core.setOutput('IDTOKENURL', runtimeUrl.trim())
      - run: |
          IDTOKEN=$(curl -H "Authorization: bearer  ${{steps.script.outputs.TOKEN}}" ${{steps.script.outputs.IDTOKENURL}}  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
          echo $IDTOKEN
          jwtd() {
              if [[ -x $(command -v jq) ]]; then
                  jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                  echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
              fi
          }
          jwtd $IDTOKEN
          echo "idToken=${IDTOKEN}" >> $GITHUB_OUTPUT
        id: tokenid
      - run: echo $VAR
        env:
          VAR: ${{ steps.tokenid.outputs.idToken }}
      - run: terraform init && terraform apply -auto-approve
        env:
          TF_VAR_ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ steps.tokenid.outputs.idToken }}